// Generated by CoffeeScript 1.6.3
(function() {
  var freeperControllers;

  freeperControllers = angular.module('freeperControllers', []);

  freeperControllers.controller('AppCtrl', [
    '$scope', '$http', '$window', '$location', function($scope, $http, $window, $location) {
      var history, history_dates, history_timestamp, lost_friends, new_friends, _i, _len,
        _this = this;
      if ($scope.app_data == null) {
        $location.path('/sync');
        return;
      }
      history = [];
      history_dates = Object.keys($scope.app_data.history);
      history_dates.sort();
      for (_i = 0, _len = history_dates.length; _i < _len; _i++) {
        history_timestamp = history_dates[_i];
        history.push([history_timestamp * 1000, $scope.app_data.history[history_timestamp]]);
      }
      new_friends = [];
      lost_friends = [];
      $.map($scope.app_data.new_friends, function(val, index) {
        return new_friends.push([index, val]);
      });
      $.map($scope.app_data.lost_friends, function(val, index) {
        return lost_friends.push([index, val]);
      });
      $scope.lost_friends = lost_friends;
      $scope.new_friends = new_friends;
      return $scope.chartConfig = {
        options: {
          chart: {
            type: 'spline',
            backgroundColor: null
          },
          credits: {
            enabled: false
          },
          legend: {
            enabled: false
          },
          yAxis: {
            title: {
              text: 'Friendcount'
            }
          }
        },
        series: [
          {
            name: 'Friends',
            data: history
          }
        ],
        title: {
          text: 'Friends over time'
        },
        loading: false,
        xAxis: {
          type: "datetime"
        }
      };
    }
  ]);

  freeperControllers.controller('AuthCtrl', [
    '$scope', '$routeParams', '$http', '$location', '$window', 'Facebook', 'AccessToken', function($scope, $routeParams, $http, $location, $window, Facebook, AccessToken) {
      $scope.status = 'Waiting for Authorization...';
      return Facebook.FB(function(FB) {
        return FB.getLoginStatus(function(response) {
          var auth_dialog_url, token_expires;
          auth_dialog_url = 'https://www.facebook.com/dialog/oauth?client_id=371545839655510&redirect_uri=http://apps.facebook.com/freeper/&scope=manage_notifications';
          switch (response.status) {
            case 'not_authorized':
            case 'unknown':
              return top.location.href = auth_dialog_url;
            case 'connected':
              FB.api('/me/permissions', function(response) {
                console.info(response.data[0]);
                if (!('manage_notifications' in response.data[0])) {
                  console.info('notifications missing');
                  return top.location.href = auth_dialog_url;
                }
              });
              token_expires = new Date();
              token_expires.setSeconds(token_expires.getSeconds() + response.authResponse.expiresIn);
              AccessToken.set(response.authResponse.accessToken, token_expires);
              return $location.path('/' + $routeParams.redirectTo);
          }
        });
      });
    }
  ]);

  freeperControllers.controller('SyncCtrl', [
    '$scope', '$rootScope', '$location', '$http', '$window', 'AccessToken', function($scope, $rootScope, $location, $http, $window, AccessToken) {
      var token;
      $scope.status = 'Syncing...';
      return token = AccessToken.get(function(token) {
        return $http.post('api/friendlist/sync/', {
          'access_token': token
        }).success(function(response, status) {
          if (status === 200) {
            $rootScope.app_data = response;
            return $location.path('/app');
          }
        });
      });
    }
  ]);

  freeperControllers.controller('ResetCtrl', [
    '$scope', '$rootScope', '$http', '$location', 'AccessToken', function($scope, $rootScope, $http, $location, AccessToken) {
      var token;
      $scope.status = 'Resetting changes...';
      return token = AccessToken.get(function(token) {
        return $http.post('api/friendlist/reset/', {
          'access_token': token
        }).success(function(response, status) {
          if (status === 200) {
            $rootScope.app_data.lost_friends = {};
            $rootScope.app_data.new_friends = {};
            return $location.path('/app');
          }
        });
      });
    }
  ]);

}).call(this);
